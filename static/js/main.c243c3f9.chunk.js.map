{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sNAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,qLACSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,YACL,WAAYX,GAAO,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACZC,QAAS,CAAC,CACTN,QAASO,MAAM,GAAGC,KAAK,QAExBC,WAAY,EACZC,SAAS,GAPO,E,yEAUNZ,GACX,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAY,GAE7DT,EADUM,EAAQA,EAAQM,OAAO,GACfZ,QAAQW,QAC5BX,EAAQF,IAAMe,EAAgBb,KAGlCA,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACbR,QAASA,EAAQS,OAAO,CAAC,CACxBf,QAASA,KAEVS,WAAYH,EAAQM,OACpBF,SAAUX,KAAKM,MAAMK,a,6BAGhBM,GACNjB,KAAKe,SAAS,CACbL,WAAYO,EACZN,QAAUM,EAAO,IAAM,M,+BAId,IAgBPC,EAhBM,OACFX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAChC,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACA,wBAAIE,IAAKF,GACT,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,OAa3C,OANFN,EADGE,EACM,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMK,QAAS,IAAM,KAKlD,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACPG,QAASkB,EAAQlB,QACjBL,QAAW,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,OAG9B,yBAAKJ,UAAU,aACb,6BAAMuB,GACN,4BAAKG,S,GApEIlB,IAAMC,WA2EzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMf,OAAQd,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAKTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,U","file":"static/js/main.c243c3f9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t};\n\t}\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber +1);\n\t\tconst current = history[history.length-1];\n\t\tconst squares = current.squares.slice();\n\t\tif (squares[i] || calculateWinner(squares)) {\n\t\t\treturn\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([{\n\t\t\t\tsquares: squares,\n\t\t\t}]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t});\n\t  }\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: (step % 2) ===0,\n\t\t});\n\t}\n\t\n  render() {\n\t  const history = this.state.history;\n\t  const current = history[this.state.stepNumber];\n\t  const winner = calculateWinner(current.squares);\n\t  \n\t  const moves = history.map((step, move) => {\n\t\t  const desc = move ?\n\t\t  'Go to move #' + move :\n\t\t  'Go to game start';\n\t\t  return(\n\t\t  <li key={move}>\n\t\t  <button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t  </li>\n\t\t  );\n\t  });\n\t  \n\tlet status;\n\tif (winner){\n\t\tstatus = 'Winner: ' + winner;\n\t} else {\n\t\tstatus = 'Next player: ' + (this.state.xIsNext? 'X' : 'O');\n\t}\n\t  \n\t  \n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n\t\t\tsquares={current.squares}\n\t\t\tonClick = {(i) => this.handleClick(i)}\n\t\t  />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}